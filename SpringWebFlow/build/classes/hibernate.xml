<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:flow="http://www.springframework.org/schema/webflow-config"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow-config
        http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/pizza_store" />
		<property name="username" value="root" />
		<property name="password" value="ZinedinZidan16!" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>customer-mapping.hbm.xml</value>
				<value>pizza-mapping.hbm.xml</value>
				<value>table-mapping.hbm.xml</value>
				<value>order-mapping.hbm.xml</value>
				<value>payment-mapping.hbm.xml</value>
				<value>cooker-mapping.hbm.xml</value>
				<value>ingredient-mapping.hbm.xml</value>
				<value>role-mapping.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="customerDao" class="dao.CustomerDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>

	<bean id="pizzaDao" class="dao.PizzaDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>

	<bean id="orderDao" class="dao.OrderDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>

	<bean id="pizzaSizeDao" class="dao.PizzaSizeDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>

	<bean id="pizzaTypeDao" class="dao.PizzaTypeDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>

	<bean id="pizzaToppingDao" class="dao.PizzaToppingDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>

	<bean id="tableDao" class="dao.TableDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>
	
	<bean id="bookingDao" class="dao.BookingDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>
	
	<bean id="deliveryDao" class="dao.DeliveryDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>
	
	<bean id="expressDao" class="dao.CourierDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>
	
	<bean id="ingredientDao" class="dao.IngredientDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>
	
	<bean id="cookerDao" class="dao.CookDao">
		<property ref="sessionFactory" name="sessionFactory" />
	</bean>

	<bean id="pricingEngine" class="pizza.PricingEngineImpl">
		<property name="sizePrices">
			<map>
				<entry key="SMALL" value="6.99f" />
				<entry key="MEDIUM" value="7.99f" />
				<entry key="LARGE" value="8.99f" />
				<entry key="GINORMOUS" value="9.99f" />
			</map>
		</property>
		<property name="pricePerTopping" value="0.20f"></property>
	</bean>
	
	<bean id="costsEngine" class="pizza.CostsEngine"/>

	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="checkWriteOperations" value="false" />
	</bean>
	
	<bean id="oauthToken" class="twitter.OAuthToken" scope="singleton">
		<property name="consumerKey" value="bRcYQZi823DvqUUzVHM3jLmpa" />
		<property name="consumerSecret"	value="JnTfoKtgNcovPACjyMOhJ6jzY27A1jMFH6S2IRgrLpg5dclcR3" />
	</bean>
	
	<bean id="accessToken" class="twitter.MyAccessToken" scope="singleton"/>

</beans>
